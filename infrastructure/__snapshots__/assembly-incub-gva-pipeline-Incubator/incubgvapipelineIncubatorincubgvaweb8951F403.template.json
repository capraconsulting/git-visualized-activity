{
  "Resources": {
    "UserPoolUserPoolClient40176907": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": "eu-west-1_oGQHzXmbo",
        "AllowedOAuthFlows": [
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": true,
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": [
          "Google",
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/UserPool/UserPoolClient/Resource"
      }
    },
    "WebWebBucketAF209868": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/WebBucket/Resource"
      }
    },
    "WebWebBucketPolicy3FAD0326": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebWebBucketAF209868"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "WebDistributionOrigin1S3Origin084DE486",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebWebBucketAF209868",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebWebBucketAF209868",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "WebDistributionOrigin2S3Origin02304B30",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebWebBucketAF209868",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebWebBucketAF209868",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/WebBucket/Policy/Resource"
      }
    },
    "WebAuthNonceSigningSecretE26C05D1": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326",
            "Arn"
          ]
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/NonceSigningSecret/Resource/Default"
      }
    },
    "WebAuthClientSecretCustomResourcePolicy78CA0B49": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:eu-west-1:001112238813:userpool/eu-west-1_oGQHzXmbo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebAuthClientSecretCustomResourcePolicy78CA0B49",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/ClientSecret/Resource/CustomResourcePolicy/Resource"
      }
    },
    "WebAuthClientSecret8C3CE634": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "service": "CognitoIdentityServiceProvider",
          "action": "describeUserPoolClient",
          "parameters": {
            "UserPoolId": "eu-west-1_oGQHzXmbo",
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            }
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "Update": {
          "service": "CognitoIdentityServiceProvider",
          "action": "describeUserPoolClient",
          "parameters": {
            "UserPoolId": "eu-west-1_oGQHzXmbo",
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            }
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "WebAuthClientSecretCustomResourcePolicy78CA0B49"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/ClientSecret/Resource/Resource/Default"
      }
    },
    "WebAuthCheckAuthFn098F7B34": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781CheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "WebAuthClientSecret8C3CE634",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "WebAuthNonceSigningSecretE26C05D1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/CheckAuthFn/Resource/Default"
      }
    },
    "WebAuthHttpHeadersFn62AA82BB": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781HttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "WebAuthClientSecret8C3CE634",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "WebAuthNonceSigningSecretE26C05D1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/HttpHeadersFn/Resource/Default"
      }
    },
    "WebAuthParseAuthFnE3A3E046": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781ParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "WebAuthClientSecret8C3CE634",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "WebAuthNonceSigningSecretE26C05D1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/ParseAuthFn/Resource/Default"
      }
    },
    "WebAuthRefreshAuthFn86734A18": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781RefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "WebAuthClientSecret8C3CE634",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "WebAuthNonceSigningSecretE26C05D1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/RefreshAuthFn/Resource/Default"
      }
    },
    "WebAuthSignOutFn31AE8481": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn"
          ]
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781SignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "Config": {
          "httpHeaders": {
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "Referrer-Policy": "same-origin",
            "X-XSS-Protection": "1; mode=block",
            "X-Frame-Options": "DENY",
            "X-Content-Type-Options": "nosniff",
            "Cache-Control": "no-cache"
          },
          "logLevel": "warn",
          "userPoolId": "eu-west-1_oGQHzXmbo",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907"
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "WebAuthClientSecret8C3CE634",
              "UserPoolClient.ClientSecret"
            ]
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin"
          ],
          "cognitoAuthDomain": "cognito.incubator.liflig.dev",
          "callbackPath": "/auth/callback",
          "signOutRedirectTo": "/",
          "signOutPath": "/auth/sign-out",
          "refreshAuthPath": "/auth/refresh",
          "requireGroupAnyOf": [
            "liflig-active"
          ],
          "cookieSettings": {
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax"
          },
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "WebAuthNonceSigningSecretE26C05D1",
              "Value"
            ]
          }
        },
        "Nonce": ""
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/SignOutFn/Resource/Default"
      }
    },
    "WebAuthClientUpdateCustomResourcePolicyD285008F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:UpdateUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cognito-idp:eu-west-1:001112238813:userpool/eu-west-1_oGQHzXmbo"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebAuthClientUpdateCustomResourcePolicyD285008F",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/ClientUpdate/Resource/CustomResourcePolicy/Resource"
      }
    },
    "WebAuthClientUpdate97DF5190": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "service": "CognitoIdentityServiceProvider",
          "action": "updateUserPoolClient",
          "parameters": {
            "AllowedOAuthFlows": [
              "code"
            ],
            "AllowedOAuthFlowsUserPoolClient": "TRUE:BOOLEAN",
            "SupportedIdentityProviders": [
              "COGNITO",
              "Google"
            ],
            "AllowedOAuthScopes": [
              "phone",
              "email",
              "profile",
              "openid",
              "aws.cognito.signin.user.admin"
            ],
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            },
            "CallbackURLs": [
              "https://gva.incubator.liflig.dev/auth/callback"
            ],
            "LogoutURLs": [
              "https://gva.incubator.liflig.dev/"
            ],
            "UserPoolId": "eu-west-1_oGQHzXmbo"
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "Update": {
          "service": "CognitoIdentityServiceProvider",
          "action": "updateUserPoolClient",
          "parameters": {
            "AllowedOAuthFlows": [
              "code"
            ],
            "AllowedOAuthFlowsUserPoolClient": "TRUE:BOOLEAN",
            "SupportedIdentityProviders": [
              "COGNITO",
              "Google"
            ],
            "AllowedOAuthScopes": [
              "phone",
              "email",
              "profile",
              "openid",
              "aws.cognito.signin.user.admin"
            ],
            "ClientId": {
              "Ref": "UserPoolUserPoolClient40176907"
            },
            "CallbackURLs": [
              "https://gva.incubator.liflig.dev/auth/callback"
            ],
            "LogoutURLs": [
              "https://gva.incubator.liflig.dev/"
            ],
            "UserPoolId": "eu-west-1_oGQHzXmbo"
          },
          "physicalResourceId": {
            "id": {
              "Fn::Join": [
                "",
                [
                  "eu-west-1_oGQHzXmbo-",
                  {
                    "Ref": "UserPoolUserPoolClient40176907"
                  }
                ]
              ]
            }
          }
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "WebAuthClientUpdateCustomResourcePolicyD285008F"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Auth/ClientUpdate/Resource/Resource/Default"
      }
    },
    "WebDistributionOrigin1S3Origin084DE486": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for incubgvapipelineIncubatorincubgvawebWebDistributionOrigin11D37DD77"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Distribution/Origin1/S3Origin/Resource"
      }
    },
    "WebDistributionOrigin2S3Origin02304B30": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for incubgvapipelineIncubatorincubgvawebWebDistributionOrigin22A025242"
        }
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Distribution/Origin2/S3Origin/Resource"
      }
    },
    "WebDistributionCFDistributionE67D88CA": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "gva.incubator.liflig.dev"
          ],
          "CacheBehaviors": [
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "WebAuthParseAuthFnE3A3E046",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/callback",
              "TargetOriginId": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin11D37DD77",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "WebAuthRefreshAuthFn86734A18",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/refresh",
              "TargetOriginId": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin11D37DD77",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "WebAuthSignOutFn31AE8481",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/auth/sign-out",
              "TargetOriginId": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin11D37DD77",
              "ViewerProtocolPolicy": "redirect-to-https"
            },
            {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "WebAuthCheckAuthFn098F7B34",
                      "FunctionArn"
                    ]
                  }
                },
                {
                  "EventType": "origin-response",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "WebAuthHttpHeadersFn62AA82BB",
                      "FunctionArn"
                    ]
                  }
                }
              ],
              "PathPattern": "/data/*",
              "TargetOriginId": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin22A025242",
              "ViewerProtocolPolicy": "redirect-to-https"
            }
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": [
              {
                "EventType": "viewer-request",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "WebAuthCheckAuthFn098F7B34",
                    "FunctionArn"
                  ]
                }
              },
              {
                "EventType": "origin-response",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "WebAuthHttpHeadersFn62AA82BB",
                    "FunctionArn"
                  ]
                }
              }
            ],
            "TargetOriginId": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin11D37DD77",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebWebBucketAF209868",
                  "RegionalDomainName"
                ]
              },
              "Id": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin11D37DD77",
              "OriginPath": "/web",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "WebDistributionOrigin1S3Origin084DE486"
                      }
                    ]
                  ]
                }
              }
            },
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebWebBucketAF209868",
                  "RegionalDomainName"
                ]
              },
              "Id": "incubgvapipelineIncubatorincubgvawebWebDistributionOrigin22A025242",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "WebDistributionOrigin2S3Origin02304B30"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:001112238813:certificate/6a82ce2d-fbe7-418a-8b8a-06e609b8d61d",
            "MinimumProtocolVersion": "TLSv1.2_2019",
            "SslSupportMethod": "sni-only"
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Distribution/Resource"
      }
    },
    "WebDnsRecord7704C090": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "gva.incubator.liflig.dev.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "WebDistributionCFDistributionE67D88CA",
              "DomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition"
              },
              "zoneId"
            ]
          }
        },
        "HostedZoneId": "Z07028931BZD2FT5LUHHH"
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/DnsRecord/Resource"
      }
    },
    "WebDeployRole3C4D63A7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::923402097046:role/buildtools-jenkins-RoleJenkinsSlave-JQGYHR5WE6C5"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "incub-gva-web-deploy",
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Deploy/Role/Resource"
      }
    },
    "WebDeployRoleDefaultPolicy8D88A3B4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebDeploy7DEF3E65",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebDeployRoleDefaultPolicy8D88A3B4",
        "Roles": [
          {
            "Ref": "WebDeployRole3C4D63A7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Deploy/Role/DefaultPolicy/Resource"
      }
    },
    "WebDeployServiceRoleAD5BC231": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Deploy/Resource/Resource/ServiceRole/Resource"
      }
    },
    "WebDeployServiceRoleDefaultPolicy8B0EAC57": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:HeadObject",
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::incub-common-build-artifacts-001112238813-eu-west-1/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:DeleteObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebWebBucketAF209868",
                        "Arn"
                      ]
                    },
                    "/web/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebWebBucketAF209868",
                        "Arn"
                      ]
                    },
                    "/deployments.log"
                  ]
                ]
              }
            },
            {
              "Action": "s3:List*",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebWebBucketAF209868",
                  "Arn"
                ]
              }
            },
            {
              "Action": "cloudfront:CreateInvalidation",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebDeployServiceRoleDefaultPolicy8B0EAC57",
        "Roles": [
          {
            "Ref": "WebDeployServiceRoleAD5BC231"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Deploy/Resource/Resource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "WebDeploy7DEF3E65": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "webapp_deploy.main.handler",
        "Role": {
          "Fn::GetAtt": [
            "WebDeployServiceRoleAD5BC231",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Environment": {
          "Variables": {
            "DEPLOY_LOG_BUCKET_URL": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "WebWebBucketAF209868"
                  },
                  "/deployments.log"
                ]
              ]
            },
            "EXPIRE_SECONDS": "432000",
            "TARGET_BUCKET_URL": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "WebWebBucketAF209868"
                  },
                  "/web"
                ]
              ]
            },
            "CF_DISTRIBUTION_ID": {
              "Ref": "WebDistributionCFDistributionE67D88CA"
            }
          }
        },
        "FunctionName": "incub-gva-web-deploy",
        "ReservedConcurrentExecutions": 1,
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "WebDeployServiceRoleDefaultPolicy8B0EAC57",
        "WebDeployServiceRoleAD5BC231"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/Web/Deploy/Resource/Resource/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.cloudfront-auth.generate-secret.provider/Function/ServiceRole/Resource"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "DependsOn": [
        "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.cloudfront-auth.generate-secret.provider/Function/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "Roles": [
          {
            "Ref": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (incub-gva-pipeline/Incubator/incub-gva-web/henrist.cloudfront-auth.generate-secret.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                "Arn"
              ]
            }
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.cloudfront-auth.generate-secret.provider/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/UpdateCodeFn/ServiceRole/Resource"
      }
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:GetFunction",
                "lambda:UpdateFunctionCode"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "Roles": [
          {
            "Ref": "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/UpdateCodeFn/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "henristlambdaconfigproviderUpdateCodeFnBF8DF66B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ],
        "Timeout": 10
      },
      "DependsOn": [
        "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/UpdateCodeFn/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/Provider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "Roles": [
          {
            "Ref": "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-001112238813-eu-west-1",
          "S3Key": "snapshot-value.zip"
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                "Arn"
              ]
            }
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": "git-visualized-activity"
          },
          {
            "Key": "SourceRepo",
            "Value": "github/capraconsulting/git-visualized-activity"
          },
          {
            "Key": "StackName",
            "Value": "incub-gva-web"
          }
        ],
        "Timeout": 900
      },
      "DependsOn": [
        "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD"
      ],
      "Metadata": {
        "aws:cdk:path": "incub-gva-pipeline/Incubator/incub-gva-web/henrist.lambda-config.provider/Provider/framework-onEvent/Resource",
        "aws:asset:path": "asset.snapshot-value",
        "aws:asset:property": "Code"
      }
    }
  },
  "Parameters": {
    "WebAuthCheckAuthFnImportNonce7C1C7E0A": {
      "Type": "String",
      "Default": "snapshot"
    },
    "WebAuthHttpHeadersFnImportNonceF11CB9B9": {
      "Type": "String",
      "Default": "snapshot"
    },
    "WebAuthParseAuthFnImportNonce696F7780": {
      "Type": "String",
      "Default": "snapshot"
    },
    "WebAuthRefreshAuthFnImportNonceCCA8C1CE": {
      "Type": "String",
      "Default": "snapshot"
    },
    "WebAuthSignOutFnImportNonce7E1414FD": {
      "Type": "String",
      "Default": "snapshot"
    },
    "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781CheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-gva-web-edge/incubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781-CheckAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781HttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-gva-web-edge/incubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781-HttpHeadersFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781ParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-gva-web-edge/incubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781-ParseAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781RefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-gva-web-edge/incubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781-RefreshAuthFunction-function-arn"
    },
    "SsmParameterValuecfregionuseast1stackincubgvawebedgeincubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781SignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cf/region/us-east-1/stack/incub-gva-web-edge/incubgvapipelineIncubatorincubgvawebedgeAuthLambdas89B96781-SignOutFunction-function-arn"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Outputs": {
    "WebDeployFunctionArnOutputAA8D5D84": {
      "Value": {
        "Fn::GetAtt": [
          "WebDeploy7DEF3E65",
          "Arn"
        ]
      }
    },
    "WebDeployRoleArnOutput2C4C53A4": {
      "Value": {
        "Fn::GetAtt": [
          "WebDeployRole3C4D63A7",
          "Arn"
        ]
      }
    },
    "ExportsOutputRefWebWebBucketAF209868DA1CE065": {
      "Value": {
        "Ref": "WebWebBucketAF209868"
      },
      "Export": {
        "Name": "incub-gva-web:IncubatorincubgvawebExportsOutputRefWebWebBucketAF209868D3D0D698"
      }
    },
    "ExportsOutputRefWebDistributionCFDistributionE67D88CAD4DDDA0B": {
      "Value": {
        "Ref": "WebDistributionCFDistributionE67D88CA"
      },
      "Export": {
        "Name": "incub-gva-web:IncubatorincubgvawebExportsOutputRefWebDistributionCFDistributionE67D88CA899576A5"
      }
    }
  },
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2"
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5"
      }
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}